;#include <io.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x80
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x70
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x60
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x70
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <delay.h>
;
;#define ZERO   0b11111100
;#define ONE    0b01100000
;#define TWO    0b11011010
;#define THREE  0b11110010
;#define FOUR   0b01100110
;#define FIVE   0b10110110
;#define SIX    0b10111110
;#define SEVEN  0b11100000
;#define EIGHT  0b11111110
;#define NINE   0b11110110
;
;
;unsigned char numbers [10] = {
;    ZERO, ONE, TWO, THREE, FOUR, FIVE, SIX, SEVEN, EIGHT, NINE
;};

	.DSEG
;
;void delay_seconds_with_counter(int seconds)
; 0000 0015 {

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0000 0016     int x;
; 0000 0017     for (x = seconds; x > 0; x--)
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
;	seconds -> Y+2
;	x -> R16,R17
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
; 0000 0018     {
; 0000 0019         PORTD = numbers[x];
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
; 0000 001A         delay_ms(1000);
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
; 0000 001B     }
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
; 0000 001C }
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
;
;void main(void)
; 0000 001F {
;PCODE: $0000002C VOL: 0
; 0000 0020     DDRD = 0b11111111;
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
; 0000 0021     DDRA = 0b00000111;
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
; 0000 0022     while (1)
;PCODE: $00000031 VOL: 0
; 0000 0023     {
; 0000 0024         // Red light
; 0000 0025         PORTA.0 = 1;
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
; 0000 0026         PORTA.1 = 0;
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
; 0000 0027         PORTA.2 = 0;
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
; 0000 0028         delay_seconds_with_counter(9);
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
; 0000 0029 
; 0000 002A         // yellow light
; 0000 002B         PORTA.0 = 0;
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
; 0000 002C         PORTA.1 = 1;
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
; 0000 002D         PORTA.2 = 0;
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
; 0000 002E         delay_seconds_with_counter(3);
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
; 0000 002F 
; 0000 0030         // green light
; 0000 0031         PORTA.0 = 0;
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
; 0000 0032         PORTA.1 = 0;
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
; 0000 0033         PORTA.2 = 1;
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
; 0000 0034         delay_seconds_with_counter(9);
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
; 0000 0035     }
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
; 0000 0036 }
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
